- name: Start docker containers and listen for up time and then make fixtures (start-docker-containers.yml)
  hosts: local_machine
  gather_facts: true
  roles:
    - role: aws_login
      when: group_aws_sso_login_required | bool
  tasks:
    - name: Check if Docker daemon is running
      shell: |
        docker info > /dev/null 2>&1
      register: docker_daemon_status
      failed_when: docker_daemon_status.rc != 0
      changed_when: false
      ignore_errors: true

    - name: Prompt user to start Docker if not running
      pause:
        prompt: |
          Docker daemon is not running.
          Please start Docker Desktop (or restart your machine), then press ENTER to continue.
          If you have started Docker, you can continue. If not, press Ctrl+C to abort.
          If it still errors, please fix docker and then continue by running:
          ansible-playbook -i inventory playbooks/macos/main.yml --start-at-task="Log out repos that require Docker build"
      when: docker_daemon_status.rc != 0

    - name: Check if Docker daemon is running
      shell: |
        docker info > /dev/null 2>&1
      register: docker_daemon_status
      failed_when: docker_daemon_status.rc != 0
      changed_when: false
      ignore_errors: false

    - name: Ensure 'shared' Docker network exists
      command: docker network create shared
      ignore_errors: true

    - name: Log out repos that require Docker build
      ansible.builtin.debug:
        msg: "Repos that require Docker build: {{ docker_build_repos }}"

    - name: Log command to build Docker containers
      ansible.builtin.debug:
        msg: "Building Docker containers for repos: {{ group_clone_repos[item].docker.build_command }}"
      loop: "{{ docker_build_repos }}"
      loop_control:
        label: "{{ item }}"

    - name: Build a map of complete docker build directories for each repo
      set_fact:
        docker_build_dirs: >-
          {{
            docker_build_dirs | default({}) | combine({
              item: ([group_develop_dir, item, group_clone_repos[item].docker.sub_dir | default('')] | path_join)
            })
          }}
      loop: "{{ docker_build_repos }}"

    - name: Notify user that building containers for the first time may take a while
      ansible.builtin.debug:
        msg: "Building the containers for the first time may take several minutes. Please be patient."

    - name: Log which directory and command will be used for make build
      ansible.builtin.debug:
        msg: "Running '{{ group_clone_repos[item].docker.build_command }}' in directory '{{ docker_build_dirs[item] }}'"
      loop: "{{ docker_build_repos }}"
      loop_control:
        label: "{{ item }}"

    - name: Run make build for each service
      ansible.builtin.command: >
        {{ group_clone_repos[item].docker.build_command }}
      args:
        chdir: "{{ docker_build_dirs[item] }}"
      loop: "{{ docker_build_repos }}"
      loop_control:
        label: "{{ item }}"

    - name: Log which directory and command will be used for make up
      ansible.builtin.debug:
        msg: "Running '{{ group_clone_repos[item].docker.up_command }}' in directory '{{ docker_build_dirs[item] }}'"
      loop: "{{ docker_build_repos }}"
      loop_control:
        label: "{{ item }}"

    - name: Run make up for each service
      ansible.builtin.command: "{{ group_clone_repos[item].docker.up_command }}"
      args:
        chdir: "{{ docker_build_dirs[item] }}"
      loop: "{{ docker_build_repos }}"
      loop_control:
        label: "{{ item }}"

    - name: Log which hosts and ports will be checked for service availability
      ansible.builtin.debug:
        msg: |
          Checking host {{ item.1.override_host | default('localhost') }} on port {{ item.1.port }} for service {{ item.0.key }}
      loop: "{{ check_ports_before_fixtures }}"
      loop_control:
        label: "{{ item.0.key }}:{{ item.1.port }}"

    - name: Wait for all defined services to be up (check_ports_before_fixtures)
      ansible.builtin.wait_for:
        host: "{{ item.1.override_host | default('localhost') }}"
        port: "{{ item.1.port }}"
        delay: 2
        timeout: 60
      loop: "{{ check_ports_before_fixtures }}"
      loop_control:
        label: "{{ item.0.key }}:{{ item.1.port }}"

    - name: Prompt user to check that all migrations are complete
      pause:
        prompt: |
          Please ensure that all database migrations are complete before proceeding.
          You can do this by opening the Docker containers for the API backends and checking their logs.
          Once you have verified that migrations are finished, press ENTER to continue.
          If migrations are still running, wait until they are complete before continuing.

    - name: Run make fixtures for backend repos that require it
      ansible.builtin.command: make fixtures
      args:
        chdir: "{{ docker_build_dirs[item] }}"
      loop: "{{ backend_repos_with_fixtures }}"
      loop_control:
        label: "{{ item }}"
